pkgname=chromium+clang
pkgver=93.0.4577.63
pkgrel=4
_launcher_ver=8
_gcc_patchset=6
pkgdesc="A web browser built for speed, simplicity, and security"
arch=('x86_64')
url="https://www.chromium.org/Home"
license=('BSD')
provides=('chromium' "chromium=${pkgver}")
conflicts=('chromium')
depends=('gtk3' 'nss' 'alsa-lib' 'xdg-utils' 'libxss' 'libcups' 'libgcrypt'
  'ttf-liberation' 'systemd' 'dbus' 'libpulse' 'pciutils' 'libva'
  'desktop-file-utils' 'hicolor-icon-theme')
makedepends=('python' 'gn' 'ninja' 'clang' 'lld' 'gperf' 'nodejs' 'pipewire'
  'java-runtime-headless' 'python2')
optdepends=(
  'pipewire: WebRTC desktop sharing under Wayland'
  'kdialog: support for native dialogs in Plasma'
  'org.freedesktop.secrets: password storage backend on GNOME / Xfce'
  'kwallet: support for storing passwords in KWallet on Plasma'
)
source=(
  "https://commondatastorage.googleapis.com/chromium-browser-official/chromium-${pkgver}.tar.xz"
  "https://github.com/foutrelis/chromium-launcher/archive/v${_launcher_ver}/chromium-launcher-${_launcher_ver}.tar.gz"
  "https://github.com/stha09/chromium-patches/releases/download/chromium-${pkgver%%.*}-patchset-$_gcc_patchset/chromium-${pkgver%%.*}-patchset-$_gcc_patchset.tar.xz"
  chromium-sandbox-pie.patch
  chromium-no-libpng-prefix.patch
  chromium-jpeg-nomangle.patch
  chromium-no-zlib-mangle.patch
  chromium-unbundle-zlib.patch
  chromium-compiler.patch
  chromium-use-oauth2-client-switches-as-default.patch
  chromium-enable-hardware-accelerated-mjpeg.patch
  chromium-vaapi-i686-fpermissive.patch
  chromium-fix-vaapi-on-intel.patch
  extend-enable-accelerated-video-decode-flag.patch
  sql-make-VirtualCursor-standard-layout-type.patch
  chromium-protobuf-RepeatedPtrField-export.patch
  chromium-sandbox-syscall-broker-use-struct-kernel_stat.patch
  chromium-sandbox-fix-fstatat-crash.patch
  chromium-EnumTable-crash.patch
  chromium-std-max-fix.patch
  chromium-ruy-include.patch
  chromium-gcc11.patch
  chromium-py3-fixes.patch
  chromium-libdav1d.patch
  chromium-InkDropHost-crash.patch
  chromium-ffmpeg-4.4.patch
  chromium-replace-blacklist-with-ignorelist.patch
)
sha256sums=('eaf34fa6c2f24054655fbb2376b6e3ddee4cf4868c1324c921e71a45cfc94853'
            '213e50f48b67feb4441078d50b0fd431df34323be15be97c55302d3fdac4483a'
            'a44ffd9e25fcbd8b3cc778871890e4da6fe12600ad549c807e1d03f61f0cdf73'
            'e5b651b403e5b161bf9b5e049f8202c444d7f1700411f89d62c20303c80846e0'
            '70a2805a63df15817a3435e983c0350c5d04ff62deffd8214cbb040b904f54a5'
            '15c93da644dbc533a6b74bd7f86a07dc59023c7b369298acd649715b9a9209a5'
            'c162eafc1f128e616281e719d860ec8726eec89660f449ed0e9af7dfe07c8cc9'
            'f8dcac3a18e20bee8c54912c1c931e723e97981cc88c8568bd05411812ff6204'
            'fefc0f1a6e24e4322208dd32deffbe93de076e5382c9e80d0b41b9c05a134994'
            'e393174d7695d0bafed69e868c5fbfecf07aa6969f3b64596d0bae8b067e1711'
            '043d83d22af1210c2dd7f3ef9e42e6f316556cb9ec3e377deded080025abf9c1'
            '7a84822b25734547055c2aba265df50ab02f47515b3f7fa0ce821572d4d1f8cd'
            'cfd35f512cd966a1566397c02897d3cb3d89e117b41b8629e2de11329a2c0b17'
            '40eb6184ba7f1860ec0c7fc88fd148c72cb6bc11383026e34809278789b7c4a9'
            '2b36574144bb7135512b81f394e53ea80d931ac62148b28c17a70a2869cb501c'
            '5d5bfedbabdf3e05c8159afc2bf776b8f95212413ba44464b4d973ac5a127cf1'
            '268e18ad56e5970157b51ec9fc8eb58ba93e313ea1e49c842a1ed0820d9c1fa3'
            '253348550d54b8ae317fd250f772f506d2bae49fb5dc75fe15d872ea3d0e04a5'
            'bb4560e067eb6ff6d4c4a5c4f149d1cc1c9c705a14be4721ead2ebb8ec84ded1'
            '7584ec20a3830f619d80d4bcbc432f6a5b7e733c00d397a5dc831ba093ffcc6b'
            '885e83c91fe29246f1d8abc62b70cb28348bf5eda722bd06b17663c86244106c'
            '5690089b8bd6946dfa975b8022531213b882b3396a3c968eeef9836b131725b7'
            'ff80a8fe749363ff91b063cf641d3527807c48b23efe62f8de1d0a6076b39b11'
            '97c5c3551c19e5a9b77ac9db5dd3bd396f08acccf735ac5710274bd31e4ce08c'
            '04bba6fb19ea5a4ab3949b65f06c88728a00ab296f42022ece62ca2fa25ec2e7'
            '1a9e074f417f8ffd78bcd6874d8e2e74a239905bf662f76a7755fa40dc476b57'
            'd3344ba39b8c6ed202334ba7f441c70d81ddf8cdb15af1aa8c16e9a3a75fbb35')
#noextract=("${source[@]##*/}")
# Possible replacements are listed in build/linux/unbundle/replace_gn_files.py
# Keys are the names in the above script; values are the dependencies in Arch
declare -gA _system_libs=(
  [ffmpeg]=ffmpeg
  [flac]=flac
  [fontconfig]=fontconfig
  [freetype]=freetype2
  [harfbuzz-ng]=harfbuzz
  [icu]=icu
  [libdrm]=libdrm
  [libjpeg]=libjpeg
  [libpng]=libpng
  #[libvpx]=libvpx
  [libwebp]=libwebp
  [libxml]=libxml2
  [libxslt]=libxslt
  [opus]=opus
  [re2]=re2
  [snappy]=snappy
  [zlib]=minizip
)

_unwanted_bundled_libs=(
  $(printf "%s\n" ${!_system_libs[@]} | sed 's/^libjpeg$/&_turbo/')
)

depends+=(${_system_libs[@]})

# Google API keys (see https://www.chromium.org/developers/how-tos/api-keys)
# Note: These are for Arch Linux use ONLY. For your own distribution, please
# get your own set of keys.
#
# Starting with Chromium 89 (2021-03-02) the OAuth2 credentials have been left
# out: https://archlinux.org/news/chromium-losing-sync-support-in-early-march/
_google_api_key=AIzaSyDwr302FpOSkGRpLlUpPThNTDPbXcIn_FM

_patch() {

  echo -e "\E[1;33m Apply patch: ${1}\E[0m"
  patch -p1 -i "${srcdir:?}/${1}"

}

prepare() {

  cd "${srcdir:?}/chromium-${pkgver}"

  # Allow building against system libraries in official builds
  sed -i 's/OFFICIAL_BUILD/GOOGLE_CHROME_BUILD/' \
    tools/generate_shim_headers/generate_shim_headers.py

  # https://crbug.com/893950
  sed -i -e 's/\<xmlMalloc\>/malloc/' -e 's/\<xmlFree\>/free/' \
    third_party/blink/renderer/core/xml/*.cc \
    third_party/blink/renderer/core/xml/parser/xml_document_parser.cc \
    third_party/libxml/chromium/*.cc

  # Add pie build flags to sandbox
  # _patch chromium-sandbox-pie.patch # Unstable
  # Do not prefix libpng functions
  _patch chromium-no-libpng-prefix.patch
  # Do not mangle libjpeg
  _patch chromium-jpeg-nomangle.patch
  # Do not mangle zlib
  _patch chromium-no-zlib-mangle.patch
  # Unbundle zlib
  _patch chromium-unbundle-zlib.patch
  # Compiler debug info optimization
  _patch chromium-compiler.patch

  # Use the --oauth2-client-id= and --oauth2-client-secret= switches for
  # setting GOOGLE_DEFAULT_CLIENT_ID and GOOGLE_DEFAULT_CLIENT_SECRET at
  # runtime -- this allows signing into Chromium without baked-in values
  _patch chromium-use-oauth2-client-switches-as-default.patch

  # VAAPI
  _patch chromium-enable-hardware-accelerated-mjpeg.patch
  _patch extend-enable-accelerated-video-decode-flag.patch
  _patch chromium-vaapi-i686-fpermissive.patch
  _patch chromium-fix-vaapi-on-intel.patch

  # Upstream fixes
  _patch chromium-protobuf-RepeatedPtrField-export.patch
  _patch chromium-sandbox-syscall-broker-use-struct-kernel_stat.patch # glibc 2.34
  _patch chromium-sandbox-fix-fstatat-crash.patch                     # glibc 2.34
  _patch chromium-EnumTable-crash.patch
  _patch chromium-std-max-fix.patch # glibc 2.34
  _patch chromium-ruy-include.patch
  _patch chromium-gcc11.patch
  _patch chromium-py3-fixes.patch
  _patch chromium-libdav1d.patch
  _patch chromium-InkDropHost-crash.patch
  _patch chromium-ffmpeg-4.4.patch
  #_patch chromium-replace-blacklist-with-ignorelist.patch
  _patch patches/chromium-93-pdfium-include.patch
  _patch patches/chromium-93-HashPasswordManager-include.patch
  _patch patches/chromium-93-BluetoothLowEnergyScanFilter-include.patch
  _patch patches/chromium-93-ClassProperty-include.patch
  _patch patches/chromium-93-DevToolsEmbedderMessageDispatcher-include.patch
  _patch patches/chromium-93-ScopedTestDialogAutoConfirm-include.patch

  # https://chromium-review.googlesource.com/c/chromium/src/+/2862724
  _patch sql-make-VirtualCursor-standard-layout-type.patch

  # Fix build with system libpng
  sed -i -e "/USE_SYSTEM_LIBPNG/ a#include \"core/fxcodec/fx_codec_def.h\"" \
    third_party/pdfium/core/fxcodec/png/png_decoder.cpp

  # Fix build with glibc 3.34
  # sandbox/linux/services/credentials.cc:101:16: error: variable-sized object may not be initialized
  sed -i -e "s/char\stls_buf\[PTHREAD_STACK_MIN\]\s=\s{0};/char tls_buf[PTHREAD_STACK_MIN];for(size_t i=0;i<PTHREAD_STACK_MIN;i++) tls_buf[i]=0;/g" \
    sandbox/linux/services/credentials.cc

  # Link to system tools required by the build
  mkdir -p third_party/node/linux/node-linux-x64/bin
  ln -sf /usr/bin/node third_party/node/linux/node-linux-x64/bin/
  ln -sf /usr/bin/java third_party/jdk/current/bin/

  # Remove bundled libraries for which we will use the system copies; this
  # *should* do what the remove_bundled_libraries.py script does, with the
  # added benefit of not having to list all the remaining libraries
  local _lib
  for _lib in ${_unwanted_bundled_libs[@]}; do
    find "third_party/${_lib}" -type f \
      \! -path "third_party/${_lib}/chromium/*" \
      \! -path "third_party/${_lib}/google/*" \
      \! -path "third_party/harfbuzz-ng/utils/hb_scoped.h" \
      \! -regex '.*\.\(gn\|gni\|isolate\)' \
      -delete
  done

  ./build/linux/unbundle/replace_gn_files.py \
    --system-libraries "${!_system_libs[@]}"

  rm -rf buildtools/third_party/libc++/BUILD.gn

}

build() {

  ulimit -n 4096

  make -C "chromium-launcher-${_launcher_ver}" "-j$(nproc)"

  cd "${srcdir:?}/chromium-${pkgver}" || exit 1

  local _flags=(
    'custom_toolchain="//build/toolchain/linux/unbundle:default"'
    'host_toolchain="//build/toolchain/linux/unbundle:default"'
    'v8_snapshot_toolchain="//build/toolchain/linux/unbundle:default"'
    'is_clang=true'
    'clang_use_chrome_plugins=false'
    'use_lld=true'
    'is_official_build=true' # implies is_cfi=true on x86_64
    'is_debug=false'
    'is_asan=false'
    'is_cfi=false'
    'is_hwasan=false'
    'is_lsan=false'
    'is_msan=false'
    'is_tsan=false'
    'is_ubsan=false'
    'is_ubsan_null=false'
    'is_ubsan_no_recover=false'
    'is_ubsan_security=false'
    'is_ubsan_vptr=false'
    'msan_track_origins=0'
    'sanitizer_coverage_flags=""'
    'use_afl=false'
    'use_cfi_diag=false'
    'use_cfi_recover=false'
    'use_libfuzzer=false'
    'use_locally_built_instrumented_libraries=false'
    'use_sanitizer_coverage=false'
    'symbol_level=0'
    'blink_symbol_level=0'
    'blink_enable_generated_code_formatting=false'
    'treat_warnings_as_errors=false'
    'fieldtrial_testing_like_official_build=true'
    'ffmpeg_branding="Chrome"'
    'proprietary_codecs=true'
    'rtc_use_pipewire=true'
    'link_pulseaudio=true'
    'use_gnome_keyring=false'
    'use_sysroot=false'
    'use_custom_libcxx=false'
    'use_system_libpng=true'
    'use_system_libjpeg=true'
    'use_system_zlib=true'
    'use_system_harfbuzz=true'
    'use_partition_alloc=true'
    'use_vaapi=true'
    'enable_hangout_services_extension=true'
    'enable_widevine=true'
    'enable_nacl=false'
    "google_api_key=\"${_google_api_key}\""
  )

  if [[ "${CFLAGS=}" =~ znver2 ]]; then
    _flags+=('x64_arch="znver2"')
  else
    _flags+=('x64_arch="x86-64-v3"')
  fi

  if [[ -n ${_system_libs[icu]+set} ]]; then
    _flags+=('icu_use_data_file=false')
  fi

  LDFLAGS="${LDFLAGS=} -Wl,--thinlto-jobs=$(nproc)"
  CFLAGS=${CFLAGS/--param ssp-buffer-size=4 -fstack-clash-protection/}     # Affects stability
  CXXFLAGS=${CXXFLAGS/--param ssp-buffer-size=4 -fstack-clash-protection/} # Affects stability
  # Facilitate deterministic builds (taken from build/config/compiler/BUILD.gn)
  CFLAGS+=' -Wno-builtin-macro-redefined'
  CXXFLAGS+=' -Wno-builtin-macro-redefined'
  CPPFLAGS+=' -D__DATE__=  -D__TIME__=  -D__TIMESTAMP__='

  # Do not warn about unknown warning options
  CFLAGS+=' -Wno-unknown-warning-option'
  CXXFLAGS+=' -Wno-unknown-warning-option'

  gn gen out/Release --args="${_flags[*]}"
  ninja ${NINJAFLAGS} -C out/Release chrome chrome_sandbox chromedriver

}

package() {

  cd "chromium-launcher-${_launcher_ver}" || exit 1

  make PREFIX=/usr DESTDIR="${pkgdir:?}" install
  install -Dm644 LICENSE \
    "${pkgdir:?}/usr/share/licenses/chromium/LICENSE.launcher"

  cd "${srcdir:?}/chromium-${pkgver}" || exit 1

  install -D out/Release/chrome "${pkgdir:?}/usr/lib/chromium/chromium"
  install -Dm4755 out/Release/chrome_sandbox "${pkgdir:?}/usr/lib/chromium/chrome-sandbox"
  ln -sf /usr/lib/chromium/chromedriver "${pkgdir:?}/usr/bin/chromedriver"

  install -Dm644 chrome/installer/linux/common/desktop.template \
    "${pkgdir:?}/usr/share/applications/chromium.desktop"
  install -Dm644 chrome/app/resources/manpage.1.in \
    "${pkgdir:?}/usr/share/man/man1/chromium.1"
  sed -i \
    -e 's/@@MENUNAME@@/Chromium/g' \
    -e 's/@@PACKAGE@@/chromium/g' \
    -e 's/@@USR_BIN_SYMLINK_NAME@@/chromium/g' \
    "${pkgdir:?}/usr/share/applications/chromium.desktop" \
    "${pkgdir:?}/usr/share/man/man1/chromium.1"

  install -Dm644 chrome/installer/linux/common/chromium-browser/chromium-browser.appdata.xml \
    "${pkgdir:?}/usr/share/metainfo/chromium.appdata.xml"
  sed -ni \
    -e 's/chromium-browser\.desktop/chromium.desktop/' \
    -e '/<update_contact>/d' \
    -e '/<p>/N;/<p>\n.*\(We invite\|Chromium supports Vorbis\)/,/<\/p>/d' \
    -e '/^<?xml/,$p' \
    "${pkgdir:?}/usr/share/metainfo/chromium.appdata.xml"

  local toplevel_files=(
    chrome_100_percent.pak
    chrome_200_percent.pak
    resources.pak
    v8_context_snapshot.bin
    # ANGLE
    libEGL.so
    libGLESv2.so
    chromedriver
    crashpad_handler
  )

  if [[ -z ${_system_libs[icu]+set} ]]; then
    toplevel_files+=(icudtl.dat)
  fi

  cp "${toplevel_files[@]/#/out/Release/}" "${pkgdir:?}/usr/lib/chromium/"
  install -Dm644 -t "${pkgdir:?}/usr/lib/chromium/locales" out/Release/locales/*.pak
  install -Dm755 -t "${pkgdir:?}/usr/lib/chromium/swiftshader" out/Release/swiftshader/*.so

  for size in 24 48 64 128 256; do
    install -Dm644 "chrome/app/theme/chromium/product_logo_$size.png" \
      "${pkgdir:?}/usr/share/icons/hicolor/${size}x${size}/apps/chromium.png"
  done

  for size in 16 32; do
    install -Dm644 "chrome/app/theme/default_100_percent/chromium/product_logo_$size.png" \
      "${pkgdir:?}/usr/share/icons/hicolor/${size}x${size}/apps/chromium.png"
  done

  install -Dm644 LICENSE "${pkgdir:?}/usr/share/licenses/chromium/LICENSE"

}

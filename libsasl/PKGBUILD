pkgname=libsasl+clang
pkgver=2.1.27
pkgrel=3
pkgdesc="Cyrus Simple Authentication Service Layer (SASL) library"
arch=('x86_64')
url="https://www.cyrusimap.org/sasl/"
license=('custom')
options=('!makeflags')
makedepends=('postgresql-libs' 'mariadb-libs' 'libldap' 'krb5' 'openssl' 'sqlite')
source=(
  "https://github.com/cyrusimap/cyrus-sasl/releases/download/cyrus-sasl-${pkgver}/cyrus-sasl-${pkgver}.tar.gz"{,.sig}
  0003-Update-saslauthd.conf-location-in-documentation.patch
  0006-Enable-autoconf-maintainer-mode.patch
  0010-Update-required-libraries-when-ld-as-needed-is-used.patch
  0013-Don-t-use-la-files-for-opening-plugins.patch
  0020-Restore-LIBS-after-checking-gss_inquire_sec_context_.patch
  0032-Add-with_pgsql-include-postgresql-to-include-path.patch
  cyrus-sasl-2.1.25-no_rpath.patch
  cyrus-sasl-2.1.21-sizes.patch
  cyrus-sasl-2.1.26-md5global.patch
  cyrus-sasl-pr559-RC4-openssl.patch
  cyrus-sasl-cve-2019-19906.patch
  cyrus-sasl-2.1.27-Add-basic-test-infrastructure.patch
  cyrus-sasl-2.1.27-Add-Channel-Binding-support-for-GSSAPI-GSS-SPNEGO.patch
  cyrus-sasl-2.1.27-Add-support-for-setting-max-ssf-0-to-GSS-SPNEGO.patch
  cyrus-sasl-2.1.27-Emit-debug-log-only-in-case-of-errors.patch
  cyrus-sasl-2.1.27-fix-for-autoconf270.patch
  cyrus-sasl-2.1.27-nostrncpy.patch
  cyrus-sasl-2.1.27-Add-basic-test-plain-auth.patch
  cyrus-sasl-2.1.27-coverity.patch
  gdbm-errno.patch
  saslauthd.service
  saslauthd.conf.d
  tmpfiles.conf
)
sha256sums=('26866b1549b00ffd020f188a43c258017fa1c382b3ddadd8201536f72efb05d5'
  'SKIP'
  '9919c81196701d11a3a77e2573a541489ad9ab42a4c50eb7d19edfb37713c604'
  '7bd2b2af36c061e92f69944a18e2c122aea0d2b21773f5ea47bb6209f13d0812'
  '8e22cb6ac58208f191b1eb19aac602c1bf49708f2a3b2e3de5f5b2c1e2467906'
  'bbee401c01dc6942710e0c1285091fcd98588bf636b52f24ed0e3b04039b748b'
  'a953c79c585d579f25135de0fe807d6da1fddccbd5b66a9606fb6390c12c7e31'
  '3c375f8755fdbd98a21c4ee195bebbd2a146901fee327e4dd6cfde7a4dcba7c3'
  'eee18c6e9ab8796d10d63c23ac2c023812f2a1ecfc4f02901f4230e0d86252db'
  'f4f4a70587402fe01502e7d95e66f11625f86208e136c7b6ecd509c4a89922a7'
  '147a33935508c5b9c2d3adef69925291701910da0aeb810ddbb29cba30fe0f64'
  '9b37c490a3edb3ec403de175a81225930ef53bf454919a9893f346feae6eee7e'
  '9d3c4bda5906dce79234b54933d2f3c284b43c597d653c9439ed3fcd530c8a5c'
  '36047dfc03aad65f295a18823bb2c7f4a78fe76f3926a9baffe47e04676de139'
  '3f6d65b1d69fa375b38047dba3f60830f89259ef13a1aea553b8bc85039e274e'
  '9f70b8042316d2cb87b444cdadefe8353ffde7f1b79f991b9fbaee3d2849659d'
  '969a5e1df9f111300379d960ac196e297a8b9d28bb47e8d330479e424897ab84'
  '54641e6adabbb46fc04d219ea59797f55c94f7296c4ab24b6d0f2a6b62bd3b9c'
  '179b4868a9dbe5195835b25e29a280ecefcf24d84a26b559534fa8b00f32575a'
  'b60d63766831f22bd2b83111f0b8ea07065dcfe80c4f2a4a23497900f5ab85b5'
  '3158b71e9f1a8f4ec7644e5d2f585c3f2a28691b6081872a97cff23c98955fa7'
  '03a57cbcec85602fb8e39b7c8a3ff1a22d2c20a28e771b8b326a570d733bf432'
  '5c6453050a5f594ca1d53baf3a6188d8f3cdc7a28467ad7c844ad51f663dae9a'
  'fa57b4f374ae633633091b1c8b44e1e0be814e4fddbfa75f16eb3dd1f16b8640'
  '16ca1a4185847b0c6c70ef6c7c314cb466f698d3ed02185a5f50e8179822f024')
validpgpkeys=('829F339F8C296FE80F409D93E3D7C118C7B9F46A')

_llvm=0

_patch() {

  echo -e "\E[1;33m Apply patch: ${1}\E[0m"
  patch -p1 -i "${srcdir:?}/${1}"

}

prepare() {

  if clang --version 2>/dev/null | grep -iq "clang\s*version\s*[0-9]" && ld.lld --version 2>/dev/null | grep -iq "LLD\s*[0-9]"; then
    _llvm=1
  fi

  cd "${srcdir:?}/cyrus-sasl-${pkgver}" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/cyrus-sasl-${pkgver} directory! Prepare Failed! \E[0m"
    exit 1
  )

  _patch "0003-Update-saslauthd.conf-location-in-documentation.patch"
  _patch "0006-Enable-autoconf-maintainer-mode.patch"
  _patch "0010-Update-required-libraries-when-ld-as-needed-is-used.patch"
  _patch "0013-Don-t-use-la-files-for-opening-plugins.patch"
  _patch "0020-Restore-LIBS-after-checking-gss_inquire_sec_context_.patch"
  _patch "0032-Add-with_pgsql-include-postgresql-to-include-path.patch"
  _patch "gdbm-errno.patch"

  _patch "cyrus-sasl-2.1.25-no_rpath.patch"
  _patch "cyrus-sasl-2.1.21-sizes.patch"
  _patch "cyrus-sasl-2.1.26-md5global.patch"
  _patch "cyrus-sasl-pr559-RC4-openssl.patch"
  _patch "cyrus-sasl-cve-2019-19906.patch"
  _patch "cyrus-sasl-2.1.27-Add-basic-test-infrastructure.patch"
  _patch "cyrus-sasl-2.1.27-Add-Channel-Binding-support-for-GSSAPI-GSS-SPNEGO.patch"
  _patch "cyrus-sasl-2.1.27-Add-support-for-setting-max-ssf-0-to-GSS-SPNEGO.patch"
  _patch "cyrus-sasl-2.1.27-Emit-debug-log-only-in-case-of-errors.patch"
  _patch "cyrus-sasl-2.1.27-fix-for-autoconf270.patch"
  _patch "cyrus-sasl-2.1.27-nostrncpy.patch"
  _patch "cyrus-sasl-2.1.27-Add-basic-test-plain-auth.patch"
  _patch "cyrus-sasl-2.1.27-coverity.patch"

  cp -a saslauthd/saslauthd.mdoc saslauthd/saslauthd.8

}

build() {

  CFLAGS="${CFLAGS} -fPIC"

  cd "${srcdir:?}/cyrus-sasl-${pkgver}" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/cyrus-sasl-${pkgver} directory! Build Failed! \E[0m"
    exit 1
  )

  if [[ ${_llvm} -eq 1 ]]; then
    CPPFLAGS=${CPPFLAGS/-D_FORTIFY_SOURCE=2/}
    CFLAGS="${CFLAGS} -flto=thin"
    CXXFLAGS="${CXXFLAGS} -flto=thin"
    LDFLAGS="${LDFLAGS} -flto=thin"
  fi

  rm -f config/config.guess config/config.sub
  rm -f config/ltconfig config/ltmain.sh config/libtool.m4
  rm -fr autom4te.cache
  libtoolize -c
  aclocal -I config
  automake -a -c
  autoheader
  autoconf

  ./configure --prefix=/usr \
    --sbin=/usr/bin \
    --mandir=/usr/share/man \
    --infodir=/usr/share/info \
    --disable-static \
    --enable-shared \
    --enable-alwaystrue \
    --enable-checkapop \
    --enable-cram \
    --enable-digest \
    --disable-otp \
    --disable-srp \
    --disable-srp-setpass \
    --disable-krb4 \
    --enable-gssapi \
    --enable-auth-sasldb \
    --enable-plain \
    --enable-anon \
    --enable-login \
    --enable-ntlm \
    --disable-passdss \
    --enable-sql \
    --with-mysql=/usr \
    --with-pgsql=/usr/lib \
    --with-sqlite3=/usr/lib \
    --enable-ldapdb \
    --disable-macos-framework \
    --with-pam \
    --with-saslauthd=/var/run/saslauthd \
    --with-ldap \
    --with-dblib=gdbm \
    --with-configdir=/etc/sasl2:/etc/sasl:/usr/lib/sasl2 \
    --sysconfdir=/etc \
    --with-devrandom=/dev/urandom

  sed -i -e 's/ -shared / -Wl,-O1,--as-needed\0/g' libtool

  make

}

package_libsasl+clang() {

  pkgdesc="Cyrus Simple Authentication Service Layer (SASL) Library"
  depends=('openssl')
  provides=('libsasl' "libsasl=${pkgver}")
  conflicts=('libsasl' 'cyrus-sasl-plugins')

  cd "${srcdir:?}/cyrus-sasl-${pkgver}" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/cyrus-sasl-${pkgver} directory! Package libsasl Failed! \E[0m"
    exit 1
  )

  make DESTDIR="${pkgdir:?}" install-pkgconfigDATA

  for dir in include lib sasldb plugins utils; do
    pushd ${dir}
    make DESTDIR="${pkgdir:?}" install
    popd
  done

  rm -f "${pkgdir:?}"/usr/lib/sasl2/libsql.so*
  rm -f "${pkgdir:?}"/usr/lib/sasl2/libgssapiv2.so*
  rm -f "${pkgdir:?}"/usr/lib/sasl2/libldapdb.so*
  rm -f "${pkgdir:?}"/usr/lib/sasl2/libgs2.so*

  install -m755 -d "${pkgdir:?}/usr/share/licenses/libsasl"
  install -m644 COPYING "${pkgdir:?}/usr/share/licenses/libsasl/"

}

package_cyrus-sasl+clang() {

  depends=("libsasl=${pkgver}" 'krb5' 'pam')
  pkgdesc="Cyrus saslauthd SASL authentication daemon"
  backup=('etc/conf.d/saslauthd')
  provides=('cyrus-sasl' "cyrus-sasl=${pkgver}")
  conflicts=('cyrus-sasl')

  cd "${srcdir:?}/cyrus-sasl-${pkgver}/saslauthd" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/cyrus-sasl-${pkgver}/saslauthd directory! Package cyrus-sasl Failed! \E[0m"
    exit 1
  )

  make DESTDIR="${pkgdir:?}" install
  install -Dm644 "${srcdir:?}/saslauthd.conf.d" "${pkgdir:?}/etc/conf.d/saslauthd"
  install -Dm644 "${srcdir:?}/saslauthd.service" "${pkgdir:?}/usr/lib/systemd/system/saslauthd.service"
  install -Dm644 "${srcdir:?}/tmpfiles.conf" "${pkgdir:?}/usr/lib/tmpfiles.d/saslauthd.conf"

  install -m755 -d "${pkgdir:?}/usr/share/licenses/cyrus-sasl"
  ln -sf ../libsasl/COPYING "${pkgdir:?}/usr/share/licenses/cyrus-sasl/"

}

package_cyrus-sasl-gssapi+clang() {

  pkgdesc="GSSAPI authentication mechanism for Cyrus SASL"
  depends=("libsasl+clang=${pkgver}" 'krb5')
  provides=('cyrus-sasl-gssapi' "cyrus-sasl-gssapi=${pkgver}")
  conflicts=('cyrus-sasl-gssapi')
  replaces=('cyrus-sasl-plugins')

  cd "${srcdir:?}/cyrus-sasl-${pkgver}/plugins" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/cyrus-sasl-${pkgver}/plugins directory! Package cyrus-sasl-gssapi Failed! \E[0m"
    exit 1
  )

  install -m755 -d "${pkgdir:?}/usr/lib/sasl2"
  cp -a .libs/libgssapiv2.so* "${pkgdir:?}/usr/lib/sasl2/"
  cp -a .libs/libgs2.so* "${pkgdir:?}/usr/lib/sasl2/"

  install -m755 -d "${pkgdir:?}/usr/share/licenses/cyrus-sasl-gssapi"
  ln -sf ../libsasl/COPYING "${pkgdir:?}/usr/share/licenses/cyrus-sasl-gssapi/"

}

package_cyrus-sasl-ldap+clang() {

  pkgdesc="ldapdb auxprop module for Cyrus SASL"
  depends=("libsasl+clang=${pkgver}" 'libldap')
  provides=('cyrus-sasl-ldap' "cyrus-sasl-ldap=${pkgver}")
  conflicts=('cyrus-sasl-ldap')
  replaces=('cyrus-sasl-plugins')

  cd "${srcdir:?}/cyrus-sasl-${pkgver}/plugins" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/cyrus-sasl-${pkgver}/plugins directory! Package cyrus-sasl-ldap Failed! \E[0m"
    exit 1
  )

  install -m755 -d "${pkgdir:?}/usr/lib/sasl2"
  cp -a .libs/libldapdb.so* "${pkgdir:?}/usr/lib/sasl2/"

  install -m755 -d "${pkgdir:?}/usr/share/licenses/cyrus-sasl-ldap"
  ln -sf ../libsasl/COPYING "${pkgdir:?}/usr/share/licenses/cyrus-sasl-ldap/"

}

package_cyrus-sasl-sql+clang() {

  pkgdesc="SQL auxprop module for Cyrus SASL"
  depends=("libsasl+clang=${pkgver}" 'postgresql-libs' 'mariadb-libs' 'sqlite')
  provides=('cyrus-sasl-sql' "cyrus-sasl-sql=${pkgver}")
  conflicts=('cyrus-sasl-sql')
  replaces=('cyrus-sasl-plugins')

  cd "${srcdir:?}/cyrus-sasl-${pkgver}/plugins" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/cyrus-sasl-${pkgver}/plugins directory! Package cyrus-sasl-sql Failed! \E[0m"
    exit 1
  )

  install -m755 -d "${pkgdir:?}/usr/lib/sasl2"
  cp -a .libs/libsql.so* "${pkgdir:?}/usr/lib/sasl2/"

  install -m755 -d "${pkgdir:?}/usr/share/licenses/cyrus-sasl-sql"
  ln -sf ../libsasl/COPYING "${pkgdir:?}/usr/share/licenses/cyrus-sasl-sql/"

}

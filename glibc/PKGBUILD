pkgbase=glibc
pkgname=(glibc lib32-glibc)
pkgver=2.33
pkgrel=13
arch=(x86_64)
url='https://www.gnu.org/software/libc'
license=(GPL LGPL)
makedepends=(git gd lib32-gcc-libs python)
optdepends=('perl: for mtrace')
options=(!strip staticlibs)
_commit=b5711025bc138c0c94d90b2015d57eda404decbe
source=("git+https://sourceware.org/git/glibc.git#commit=${_commit}"
  #source=("https://ftp.gnu.org/gnu/glibc/glibc-${pkgver}.tar.xz"
  locale-gen
  sdt.h sdt-config.h
  glibc-fedora-linux-tcsetattr.patch
  glibc-rh827510.patch
  glibc-rh819430.patch
  glibc-c-utf8-locale.patch
  glibc-c-utf8-strcmp_collation-LC_COLLATE.patch
  glibc-cs-path.patch
  glibc-cpu-check-1.patch
  glibc-cpu-check-2.patch
  glibc-cpu-check-3.patch
  glibc-cpu-amd-1.patch
  glibc-cpu-amd-2.patch
)
validpgpkeys=(
  7273542B39962DF7B299931416792B4EA25340F8 # Carlos O'Donell
  BC7C7372637EC10C57D7AA6579C43DFBF1CF2187 # Siddhesh Poyarekar
)
sha256sums=('SKIP'
            '83f108f915863c7ed0338e2d3e8f2e071a531a090ef8f8b2eb3a956a3c4f04d7'
            '774061aff612a377714a509918a9e0e0aafce708b87d2d7e06b1bd1f6542fe70'
            'cdc234959c6fdb43f000d3bb7d1080b0103f4080f5e67bcfe8ae1aaf477812f0'
            'a9c10b02fe9fb3d0d5c1565124fedaace2932be4b147b6c6deaf1efbe2c07882'
            '733396588e1e7c356f8d33ba80f6c317963dd936f9039f3f77f0bcec81138159'
            '5b46d72f406baab29298a3a15a581ea96188ac58719a9b5afd80b8dc46bbcf46'
            'ef1e271d76f65357854a0754b0defd2bb7e58c25a54870861a5b1ec54345c80b'
            'b0f0bd9376609b79babfa2b10c58a701d08f09f7ec41a760dbd4f4af24421fd2'
            'bdc28d5b5444e0ec35c98cb959635cf4f3bd23c47aa1b2f1c334a79db411b911'
            'a477aeb27c36d46325b2b3863a33751849e5e274ce1a5acec7383dc597490ab4'
            '788ea8c49401e64d33896d5c980de30724c4f7d95c5aedeefaaa89b0f4bc3b5f'
            'adb8e36b9e1ac135430e798c8e050250a40d64cb0a8ec25353a2593f664a56a5'
            '84dafba59abd433ef676458ad2542ba4f1b2c1027b3bff2b4cc91fc8a1bdd4ab'
            '7e1435dfa064e6f6bdc2d2ce4f5f3364b2eca80dbdb2c22223ad8767347577a7')

_patch() {

  echo -e "\E[1;33m Apply patch: ${1}\E[0m"
  patch -p1 -i "${srcdir:?}/${1}"

}

prepare() {

  mkdir -p glibc-build lib32-glibc-build

  [[ -d glibc-${pkgver} ]] && ln -s glibc-${pkgver} glibc

  cd glibc || exit 1

  _patch "glibc-fedora-linux-tcsetattr.patch"
  _patch "glibc-rh827510.patch"
  _patch "glibc-rh819430.patch"
  _patch "glibc-c-utf8-locale.patch"
  _patch "glibc-c-utf8-strcmp_collation-LC_COLLATE.patch"
  _patch "glibc-cs-path.patch"
  _patch "glibc-cpu-check-1.patch"
  _patch "glibc-cpu-check-2.patch"
  _patch "glibc-cpu-check-3.patch"
  _patch "glibc-cpu-amd-1.patch"
  _patch "glibc-cpu-amd-2.patch"

}

build() {

  local _configure_flags=(
    --prefix=/usr
    --with-headers=/usr/include
    --with-bugurl=https://bugs.archlinux.org/
    --enable-add-ons
    --enable-bind-now
    --enable-tunables
    --enable-kernel=5.10.1
    --enable-multi-arch
    --enable-stack-protector=strong
    --enable-static-pie
    --enable-systemtap
    --disable-nscd # Deprecated
    --disable-cet
    --disable-stackguard-randomization # BZ #27872 Commit f294306ba1385b096f4e4cac9146a989f1e6d1c0
    --disable-lock-elision
    --disable-profile
    --disable-werror
    --without-cvs
  )

  cd "${srcdir:?}/glibc-build" || exit 1

  echo "slibdir=/usr/lib" >>configparms
  echo "rtlddir=/usr/lib" >>configparms
  echo "sbindir=/usr/bin" >>configparms
  echo "rootsbindir=/usr/bin" >>configparms

  # remove fortify for building libraries
  CPPFLAGS=${CPPFLAGS/-D_FORTIFY_SOURCE=2/}
  CFLAGS=${CFLAGS/-fno-plt/}
  CXXFLAGS=${CXXFLAGS/-fno-plt/}
  #LDFLAGS=${LDFLAGS/,-z,now/}

  "${srcdir:?}/glibc/configure" \
    --libdir=/usr/lib \
    --libexecdir=/usr/lib \
    ${_configure_flags[@]}

  # build libraries with fortify disabled
  echo "build-programs=no" >>configparms
  make

  # re-enable fortify for programs
  sed -i "/build-programs=/s#no#yes#" configparms

  echo "CC += -D_FORTIFY_SOURCE=2" >>configparms
  echo "CXX += -D_FORTIFY_SOURCE=2" >>configparms
  make

  # build info pages manually for reprducibility
  make info

  cd "${srcdir:?}/lib32-glibc-build" || exit 1
  export CC="gcc -m32 -mstackrealign"
  export CXX="g++ -m32 -mstackrealign"

  echo "slibdir=/usr/lib32" >>configparms
  echo "rtlddir=/usr/lib32" >>configparms
  echo "sbindir=/usr/bin" >>configparms
  echo "rootsbindir=/usr/bin" >>configparms

  # remove fortify for building libraries
  CPPFLAGS=${CPPFLAGS/-D_FORTIFY_SOURCE=2/}
  CFLAGS=${CFLAGS/-fno-plt/}
  CXXFLAGS=${CXXFLAGS/-fno-plt/}

  "${srcdir:?}/glibc/configure" \
    --host=i686-pc-linux-gnu \
    --libdir=/usr/lib32 \
    --libexecdir=/usr/lib32 \
    ${_configure_flags[@]}

  # build libraries with fortify disabled
  echo "build-programs=no" >>configparms
  make

  # re-enable fortify for programs
  sed -i "/build-programs=/s#no#yes#" configparms

  echo "CC += -D_FORTIFY_SOURCE=2" >>configparms
  echo "CXX += -D_FORTIFY_SOURCE=2" >>configparms
  make

}

check() {

  cd glibc-build || exit 1

  # remove fortify in preparation to run test-suite
  sed -i '/FORTIFY/d' configparms

  # some failures are "expected"
  make check || true

}

package_glibc() {

  pkgdesc='GNU C Library'
  depends=('linux-api-headers>=5.10' tzdata filesystem)
  optdepends=('gd: for memusagestat')
  install=glibc.install
  backup=(etc/gai.conf etc/locale.gen)

  install -dm755 "${pkgdir:?}/etc"
  touch "${pkgdir:?}/etc/ld.so.conf"

  make -C glibc-build install_root="${pkgdir:?}" install
  rm -f "${pkgdir:?}/etc/ld.so."{cache,conf}

  # Shipped in tzdata
  rm -f "${pkgdir:?}/usr/bin/"{tzselect,zdump,zic}

  cd glibc || exit 1

  install -dm755 "${pkgdir:?}/usr/lib/"{locale,systemd/system,tmpfiles.d}

  install -m644 posix/gai.conf "${pkgdir:?}/etc/gai.conf"

  install -m755 "${srcdir:?}/locale-gen" "${pkgdir:?}/usr/bin"

  # Create /etc/locale.gen
  mkdir -p "${pkgdir:?}/etc"
  cat <<'EOF' >"${pkgdir:?}/etc/locale.gen"
# Configuration file for locale-gen
#
# lists of locales that are to be generated by the locale-gen command.
#
# Each line is of the form:
#
#     <locale> <charset>
#
#  where <locale> is one of the locales given in /usr/share/i18n/locales
#  and <charset> is one of the character sets listed in /usr/share/i18n/charmaps
#
#  Examples:
#  en_US ISO-8859-1
#  en_US.UTF-8 UTF-8
#  de_DE ISO-8859-1
#  de_DE@euro ISO-8859-15
#
#  The locale-gen command will generate all the locales,
#  placing them in /usr/lib/locale.
#
#  A list of supported locales is included in this file.
#  Uncomment the ones you need.
#
EOF
  sed -e '1,3d' -e 's|/| |g' -e 's|\\| |g' -e 's|^|#|g' \
    "${srcdir:?}/glibc/localedata/SUPPORTED" >>"${pkgdir:?}/etc/locale.gen"

  if check_option 'debug' n; then

    find "${pkgdir:?}"/usr/bin -type f -executable -exec strip ${STRIP_BINARIES} {} + 2>/dev/null || true
    find "${pkgdir:?}"/usr/lib -name '*.a' -type f -exec strip ${STRIP_STATIC} {} + 2>/dev/null || true

    # Do not strip these for gdb and valgrind functionality, but strip the rest
    find "${pkgdir:?}"/usr/lib \
      -not -name 'ld-*.so' \
      -not -name 'libc-*.so' \
      -not -name 'libpthread-*.so' \
      -not -name 'libthread_db-*.so' \
      -name '*-*.so' -type f -exec strip ${STRIP_SHARED} {} + 2>/dev/null || true

  fi

  # Provide tracing probes to libstdc++ for exceptions, possibly for other
  # libraries too. Useful for gdb's catch command.
  install -Dm644 "${srcdir:?}/sdt.h" "${pkgdir:?}/usr/include/sys/sdt.h"
  install -Dm644 "${srcdir:?}/sdt-config.h" "${pkgdir:?}/usr/include/sys/sdt-config.h"

  # Provided by libxcrypt; keep the old shared library for backwards compatibility
  rm -f "${pkgdir:?}/usr/include/crypt.h" "${pkgdir:?}/usr/lib/libcrypt."{a,so}

}

package_lib32-glibc() {

  pkgdesc='GNU C Library (32-bit)'
  depends=("glibc=${pkgver}")
  options+=('!emptydirs')

  cd lib32-glibc-build || exit 1

  make install_root="${pkgdir:?}" install
  rm -rf "${pkgdir:?}/"{etc,sbin,usr/{bin,sbin,share},var}

  # We need to keep 32 bit specific header files
  find "${pkgdir:?}/usr/include" -type f -not -name '*-32.h' -delete

  # Dynamic linker
  install -d "${pkgdir:?}/usr/lib"
  ln -s ../lib32/ld-linux.so.2 "${pkgdir:?}/usr/lib/"

  # Add lib32 paths to the default library search path
  mkdir -p "${pkgdir:?}/etc/ld.so.conf.d"
  echo '/usr/lib32' >"${pkgdir:?}/etc/ld.so.conf.d/lib32-glibc.conf"

  # Symlink /usr/lib32/locale to /usr/lib/locale
  ln -s ../lib/locale "${pkgdir:?}/usr/lib32/locale"

  if check_option 'debug' n; then
    find "${pkgdir:?}"/usr/lib32 -name '*.a' -type f -exec strip ${STRIP_STATIC} {} + 2>/dev/null || true
    find "${pkgdir:?}"/usr/lib32 \
      -not -name 'ld-*.so' \
      -not -name 'libc-*.so' \
      -not -name 'libpthread-*.so' \
      -not -name 'libthread_db-*.so' \
      -name '*-*.so' -type f -exec strip ${STRIP_SHARED} {} + 2>/dev/null || true
  fi

  # Provided by lib32-libxcrypt; keep the old shared library for backwards compatibility
  rm -f "${pkgdir:?}/usr/lib32/libcrypt."{a,so}

}

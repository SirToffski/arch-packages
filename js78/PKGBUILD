pkgname=js78+clang
pkgver=78.12.0
pkgrel=1
pkgdesc="JavaScript interpreter and libraries - Version 78"
arch=(x86_64)
url="https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey"
license=(MPL)
provides=('js78' "js78=${pkgver}")
conflicts=('js78')
depends=(gcc-libs readline zlib sh jemalloc)
makedepends=(zip autoconf2.13 python-setuptools python-psutil rust llvm clang lld)
checkdepends=(mercurial git)
_relver=${pkgver}esr
source=(
  "https://archive.mozilla.org/pub/firefox/releases/${_relver}/source/firefox-${_relver}.source.tar.xz"{,.asc}
  0001-Fixes-for-LTO-PGO-support.patch
)
sha256sums=('8b55a8b8254ddde03db83f44c9fecfc4ae86ea126b5445a0355d915830bd7410'
  'SKIP'
  '926a573eabe3b6177363b795ed5e5641b4a4ebc6d7cfa093f11e1779ac0f897c')
validpgpkeys=('14F26682D0916CDD81E37B6D61B7B526D98F0353') # Mozilla Software Releases <release@mozilla.com>

# Make sure the duplication between bin and lib is found
COMPRESSZST+=(--long)

_llvm=0

prepare() {

  if clang --version 2>/dev/null | grep -iq "clang\s*version\s*[0-9]" && ld.lld --version 2>/dev/null | grep -iq "LLD\s*[0-9]"; then
    _llvm=1
  fi

  cd "${srcdir:?}/firefox-${pkgver}" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/firefox-${pkgver} directory! Prepare Failed! \E[0m"
    exit 1
  )

  mkdir obj

  # Post-78 fixes to fix LTO with LLVM 11
  patch -Np1 -i ../0001-Fixes-for-LTO-PGO-support.patch

}

build() {

  cd "${srcdir:?}/firefox-${pkgver}/obj" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/firefox-${pkgver}/obj directory! Build Failed! \E[0m"
    exit 1
  )

  local configure_args=(
    --prefix=/usr
    --disable-debug
    --disable-debug-symbols
    --disable-jemalloc
    --enable-hardening
    --enable-linker=lld
    --enable-optimize
    --enable-readline
    --enable-release
    --enable-rust-simd
    --enable-shared-js
    --enable-tests
    --with-intl-api
    --with-system-zlib
    --without-system-icu
  )

  if [[ ${_llvm} -eq 1 ]]; then

    CFLAGS="${CFLAGS} -flto=thin"
    CXXFLAGS="${CXXFLAGS} -flto=thin"

  fi

  # Do 3-tier PGO
  echo "Building instrumented JS..."
  sh ../js/src/configure "${configure_args[@]}" \
    --enable-profile-generate=cross
  make

  echo "Profiling instrumented JS..."
  (
    local js="${PWD}/dist/bin/js"
    export LLVM_PROFILE_FILE="${PWD}/js-%p-%m.profraw"

    cd ../js/src/octane
    "${js}" run.js

    cd ../../../third_party/webkit/PerformanceTests/ARES-6
    "${js}" cli.js

    cd ../SunSpider/sunspider-0.9.1
    "${js}" sunspider-standalone-driver.js
  )

  llvm-profdata merge -o merged.profdata *.profraw

  stat -c "Profile data found (%s bytes)" merged.profdata
  test -s merged.profdata

  echo "Removing instrumented JS..."
  make clobber

  echo "Building optimized JS..."
  sh ../js/src/configure "${configure_args[@]}" \
    --enable-lto=cross \
    --enable-profile-use=cross \
    --with-pgo-profile-path="${PWD}/merged.profdata"

  make

}

check() {

  jstests_extra_args=(
    --format=none
    --exclude-random
    --wpt=disabled
  )

  jittest_extra_args=(
    --format=none
    --timeout 300
  )

  jittest_test_args=(
    basic
  )

  cd "${srcdir:?}/firefox-${pkgver}/obj" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/firefox-${pkgver}/obj directory! Check Failed! \E[0m"
    exit 1
  )

  make -C js/src check-jstests check-jit-test \
    JSTESTS_EXTRA_ARGS="${jstests_extra_args[*]}" \
    JITTEST_EXTRA_ARGS="${jittest_extra_args[*]}" \
    JITTEST_TEST_ARGS="${jittest_test_args[*]}"

}

package() {

  cd "${srcdir:?}/firefox-${pkgver}/obj" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/firefox-${pkgver}/obj directory! Package Failed! \E[0m"
    exit 1
  )

  make DESTDIR="${pkgdir:?}" install
  rm "${pkgdir:?}"/usr/lib/*.ajs
  find "${pkgdir:?}"/usr/{lib/pkgconfig,include} -type f -exec chmod -c a-x {} +

}

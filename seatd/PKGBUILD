pkgname=seatd+clang
pkgver=0.6.4
pkgrel=2
pkgdesc="A minimal seat management daemon, and a universal seat management library"
arch=(x86_64)
url="https://sr.ht/~kennylevinsen/seatd/"
license=('MIT')
provides=("libseat.so" "seatd=${pkgver}" "seatd")
replaces=("libseat")
conflicts=("seatd")
makedepends=(
  'meson'
  'ninja'
  'scdoc'
  'systemd'
)
depends=('systemd-libs')

source=(
  "seatd-${pkgver}.tar.gz::https://git.sr.ht/~kennylevinsen/seatd/archive/${pkgver}.tar.gz"
  "sysuser.conf"
)
sha256sums=('3d4ac288114219ba7721239cafee7bfbeb7cf8e1e7fd653602a369e4ad050bd8'
  'e833292adf5da25b5258a5209c258f0e4c12e1d6fe81cf228fd0cfb575080d78')

_extra_lto_flag=""

prepare() {

  if clang --version 2>/dev/null | grep -iq "clang\s*version\s*[0-9]" && ld.lld --version 2>/dev/null | grep -iq "LLD\s*[0-9]"; then
    _extra_lto_flag='-D b_lto_mode=thin'
  fi

}

build() {

  CFLAGS="${CFLAGS} -Wno-unused-parameter"

  meson setup "seatd-${pkgver}" build \
    --prefix /usr \
    --libexecdir lib \
    --sbindir bin \
    --auto-features enabled \
    --wrap-mode nodownload \
    -D debug=false \
    -D optimization=2 \
    -D b_ndebug=true \
    -D b_lto=true ${_extra_lto_flag} \
    -D b_pie=true \
    -Dexamples="disabled" \
    -Dserver="enabled" \
    -Dlibseat-logind="systemd" \
    -Dman-pages="enabled"

  meson compile -C build

}

check() {

  meson test -C build --print-errorlogs

}

package() {

  DESTDIR="${pkgdir:?}" meson install -C build

  install -Dm644 "seatd-${pkgver}/LICENSE" -t "${pkgdir:?}/usr/share/licenses/seatd"

  # Allow users in the "seat" group to access seatd
  install -Dm644 "seatd-${pkgver}/contrib/systemd/seatd.service" \
    -t "${pkgdir:?}/usr/lib/systemd/system/"
  install -Dm644 "sysuser.conf" "${pkgdir:?}/usr/lib/sysusers.d/seatd.conf"

}

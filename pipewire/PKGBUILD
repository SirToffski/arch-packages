pkgbase=pipewire+clang
pkgname=(pipewire+clang alsa-card-profiles+clang pipewire-docs+clang pipewire-media-session+clang
  pipewire-alsa+clang pipewire-jack+clang pipewire-pulse+clang gst-plugin-pipewire+clang
  pipewire-zeroconf+clang)
pkgver=0.3.32
pkgrel=2
epoch=1
pkgdesc="Low-latency audio/video router and processor"
url="https://pipewire.org"
license=(MIT)
arch=(x86_64)
makedepends=(git meson doxygen xmltoman valgrind libpulse alsa-lib libusb
  gst-plugins-base rtkit dbus sdl2 ncurses libsndfile bluez-libs sbc
  libldac libfreeaptx libfdk-aac avahi webrtc-audio-processing)
checkdepends=(desktop-file-utils)
_commit=41ce3092756ab27106881f4246e54bf32ea5adbe # tags/0.3.32
source=("git+https://gitlab.freedesktop.org/pipewire/pipewire.git#commit=${_commit}")
sha256sums=('SKIP')

_extra_lto_flag=""

prepare() {

  if clang --version 2>/dev/null | grep -iq "clang\s*version\s*[0-9]" && ld.lld --version 2>/dev/null | grep -iq "LLD\s*[0-9]"; then
    _extra_lto_flag='-D b_lto_mode=thin'
  fi

  cd "${srcdir:?}/pipewire" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/pipewire directory! Prepare Failed! \E[0m"
    exit 1
  )

  git cherry-pick -n 1216371f8c06f548f8ade6468b66612f43df1436

}

pkgver() {

  cd "${srcdir:?}/pipewire" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/pipewire directory! PkgVer Failed! \E[0m"
    exit 1
  )

  git describe --tags | sed 's/-/+/g'

}

build() {

  meson setup pipewire build \
    --prefix /usr \
    --libexecdir lib \
    --sbindir bin \
    --auto-features enabled \
    --wrap-mode nodownload \
    -D debug=false \
    -D optimization=2 \
    -D b_lto=true ${_extra_lto_flag} \
    -D b_pie=true \
    -D docs=enabled \
    -D jack=disabled \
    -D libcamera=disabled \
    -D udevrulesdir=/usr/lib/udev/rules.d \
    -D roc=disabled

  meson compile -C build

}

check() {

  meson test -C build --print-errorlogs

}

_pick() {

  local p="$1" f d
  shift
  for f; do
    d="${srcdir:?}/$p/${f#${pkgdir:?}/}"
    mkdir -p "$(dirname "$d")"
    mv "$f" "$d"
    rmdir -p --ignore-fail-on-non-empty "$(dirname "$f")"
  done

}

_ver=${pkgver:0:3}

package_pipewire+clang() {
  license+=(LGPL) # libspa-alsa
  depends=(rtkit alsa-card-profiles libdbus-1.so libncursesw.so libsndfile.so
    libudev.so libusb-1.0.so libasound.so libsystemd.so libbluetooth.so
    libsbc.so libldacBT_enc.so libfreeaptx.so libfdk-aac.so
    libwebrtc_audio_processing.so)
  optdepends=('pipewire-docs: Documentation'
    'pipewire-media-session: Default session manager'
    'pipewire-alsa: ALSA configuration'
    'pipewire-jack: JACK support'
    'pipewire-pulse: PulseAudio replacement'
    'gst-plugin-pipewire: GStreamer support'
    'pipewire-zeroconf: Zeroconf support')
  provides=("pipewire" "pipewire=${pkgver}" "pipewire+clang=${pkgver}" "libpipewire-${_ver}.so")
  conflicts=("pipewire")
  install=pipewire.install

  meson install -C build --destdir "${pkgdir:?}"

  (
    cd "${pkgdir:?}"

    _pick acp usr/lib/udev
    _pick acp usr/share/alsa-card-profile

    _pick docs usr/share/doc

    _pick pms usr/bin/pipewire-media-session
    _pick pms usr/lib/systemd/user/pipewire-media-session.service
    _pick pms usr/share/pipewire/media-session.d/*.conf

    _pick jack usr/bin/pw-jack usr/lib/pipewire-${_ver}/jack
    _pick jack usr/share/man/man1/pw-jack.1
    _pick jack usr/share/pipewire/{jack.conf,media-session.d/with-jack}

    _pick pulse usr/bin/pipewire-pulse
    _pick pulse usr/lib/pipewire-${_ver}/libpipewire-module-protocol-pulse.so
    _pick pulse usr/lib/pipewire-${_ver}/libpipewire-module-pulse-tunnel.so
    _pick pulse usr/lib/systemd/user/pipewire-pulse.*
    _pick pulse usr/share/pipewire/media-session.d/with-pulseaudio

    _pick gst usr/lib/gstreamer-1.0

    _pick zeroconf usr/lib/pipewire-${_ver}/libpipewire-module-zeroconf-discover.so
  )

  install -Dt "${pkgdir:?}/usr/share/licenses/${pkgname:?}" -m644 pipewire/COPYING

}

package_alsa-card-profiles+clang() {

  pkgdesc+=" - ALSA card profiles"
  license=(LGPL)
  provides=("alsa-card-profiles" "alsa-card-profiles=${pkgver}" "alsa-card-profiles+clang=${pkgver}")
  conflicts=("alsa-card-profiles")
  depends=("pipewire+clang=${pkgver}")

  mv acp/* "${pkgdir:?}"

}

package_pipewire-docs+clang() {

  pkgdesc+=" - documentation"
  provides=("pipewire-docs" "pipewire-docs=${pkgver}" "pipewire-docs+clang=${pkgver}")
  conflicts=("pipewire-docs")
  depends=("pipewire+clang=${pkgver}")

  mv docs/* "${pkgdir:?}"

  install -Dt "${pkgdir:?}/usr/share/licenses/${pkgname:?}" -m644 pipewire/COPYING

}

package_pipewire-media-session+clang() {

  pkgdesc+=" - Session manager"
  provides=("pipewire-media-session" "pipewire-media-session=${pkgver}" "pipewire-media-session+clang=${pkgver}")
  conflicts=("pipewire-media-session")
  depends=("pipewire+clang=${pkgver}" "libpipewire-${_ver}.so")
  install=pipewire-media-session.install

  mv pms/* "${pkgdir:?}"

  install -Dt "${pkgdir:?}/usr/share/licenses/${pkgname:?}" -m644 pipewire/COPYING

}

package_pipewire-alsa+clang() {

  pkgdesc+=" - ALSA configuration"
  provides=("pipewire-alsa" "pipewire-alsa=${pkgver}" "pipewire-alsa+clang=${pkgver}")
  conflicts=("pipewire-alsa")
  depends=("pipewire-media-session+clang=${pkgver}" "pipewire+clang=${pkgver}")
  provides=(pulseaudio-alsa)

  mkdir -p "${pkgdir:?}/etc/alsa/conf.d"
  ln -st "${pkgdir:?}/etc/alsa/conf.d" \
    /usr/share/alsa/alsa.conf.d/{50-pipewire,99-pipewire-default}.conf

  install -Dm644 /dev/null \
    "${pkgdir:?}/usr/share/pipewire/media-session.d/with-alsa"

  install -Dt "${pkgdir:?}/usr/share/licenses/${pkgname:?}" -m644 pipewire/COPYING

}

package_pipewire-jack+clang() {

  pkgdesc+=" - JACK support"
  license+=(GPL2) # libjackserver
  provides=("pipewire-jack" "pipewire-jack=${pkgver}" "pipewire-jack+clang=${pkgver}")
  conflicts=("pipewire-jack")
  depends=("pipewire-media-session+clang=${pkgver}" "libpipewire-${_ver}.so" "pipewire+clang=${pkgver}")

  mv jack/* "${pkgdir:?}"

  install -Dt "${pkgdir:?}/usr/share/licenses/${pkgname:?}" -m644 pipewire/COPYING

}

package_pipewire-pulse+clang() {

  pkgdesc+=" - PulseAudio replacement"
  depends=("pipewire-media-session+clang=${pkgver}" "libpipewire-${_ver}.so"
    "pipewire+clang=${pkgver}" libpulse.so
    libavahi-{client,common}.so)
  provides=("pipewire-pulse" "pipewire-pulse=${pkgver}" "pipewire-pulse+clang=${pkgver}" pulseaudio pulseaudio-bluetooth)
  conflicts=("pipewire-pulse" pulseaudio pulseaudio-bluetooth)
  install=pipewire-pulse.install

  mv pulse/* "${pkgdir:?}"

  install -Dt "${pkgdir:?}/usr/share/licenses/${pkgname:?}" -m644 pipewire/COPYING

}

package_gst-plugin-pipewire+clang() {

  pkgdesc="Multimedia graph framework - pipewire plugin"
  provides=("gst-plugin-pipewire" "gst-plugin-pipewire=${pkgver}" "gst-plugin-pipewire+clang=${pkgver}")
  conflicts=("gst-plugin-pipewire")
  depends=("pipewire-media-session+clang=${pkgver}" "libpipewire-${_ver}.so"
    "pipewire+clang=${pkgver}" gst-plugins-base-libs)

  mv gst/* "${pkgdir:?}"

  install -Dt "${pkgdir:?}/usr/share/licenses/${pkgname:?}" -m644 pipewire/COPYING

}

package_pipewire-zeroconf+clang() {

  pkgdesc+=" - Zeroconf support"
  provides=("pipewire-zeroconf" "pipewire-zeroconf=${pkgver}" "pipewire-zeroconf+clang=${pkgver}")
  conflicts=("pipewire-zeroconf")
  depends=("libpipewire-${_ver}.so" "pipewire+clang=${pkgver}" libavahi-{client,common}.so)

  mv zeroconf/* "${pkgdir:?}"

  install -Dt "${pkgdir:?}/usr/share/licenses/${pkgname:?}" -m644 pipewire/COPYING

}

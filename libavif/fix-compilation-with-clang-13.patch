From 76a29f64b0f085d40ed5193a1b7e390b69fb64be Mon Sep 17 00:00:00 2001
From: Grigory Vasilyev <h0tc0d3@gmail.com>
Date: Fri, 22 Oct 2021 18:47:55 +0300
Subject: [PATCH] Fix compilation with Clang 13
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Some headers such as glib-2.0 use identifier names that start with '_' followed by a capital letter.
The C standard reserves names beginning with an underscore and various other combinations.
ISO/IEC 9899:1999 (aka C99 standard) ยง7.1.3 Reserved identifiers
---
 CMakeLists.txt | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7182df72..1cae8fc1 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -129,6 +129,13 @@ if(CMAKE_C_COMPILER_ID MATCHES "Clang")
         -Wno-sign-conversion
         -Wno-error=c11-extensions
     )
+    # Some headers such as glib-2.0 use identifier names that start with '_' followed by a capital letter.
+    # The C standard reserves names beginning with an underscore and various other combinations. 
+    # ISO/IEC 9899:1999 (aka C99 standard) ยง7.1.3 Reserved identifiers
+    check_c_compiler_flag(-Wreserved-identifier HAVE_RESERVED_IDENTIFIER_WARNING)
+    if(HAVE_RESERVED_IDENTIFIER_WARNING)
+        add_definitions(-Wno-reserved-identifier)
+    endif()
     # The detection of cross compilation by -Wpoison-system-directories has false positives on macOS because
     # --sysroot is implicitly added. Turn the warning off.
     if(NOT DEFINED HAVE_POISON_SYSTEM_DIRECTORIES_WARNING)

diff --git a/src/codec_svt.c b/src/codec_svt.c
index dfd085a7..3c84defc 100644
--- a/src/codec_svt.c
+++ b/src/codec_svt.c
@@ -92,7 +92,9 @@ static avifResult svtCodecEncodeImage(avifCodec * codec,
         }
         svt_config->encoder_color_format = color_format;
         svt_config->encoder_bit_depth = (uint8_t)image->depth;
+#if !SVT_AV1_CHECK_VERSION(0, 9, 0)
         svt_config->is_16bit_pipeline = image->depth > 8;
+#endif
 
         // Follow comment in svt header: set if input is HDR10 BT2020 using SMPTE ST2084.
         svt_config->high_dynamic_range_input = (image->depth == 10 && image->colorPrimaries == AVIF_COLOR_PRIMARIES_BT2020 &&
@@ -104,8 +106,12 @@ static avifResult svtCodecEncodeImage(avifCodec * codec,
         svt_config->logical_processors = encoder->maxThreads;
         svt_config->enable_adaptive_quantization = AVIF_FALSE;
         // disable 2-pass
+#if SVT_AV1_CHECK_VERSION(0, 9, 0)
+        svt_config->rc_stats_buffer = (SvtAv1FixedBuf) { NULL, 0 };
+#else
         svt_config->rc_firstpass_stats_out = AVIF_FALSE;
         svt_config->rc_twopass_stats_in = (SvtAv1FixedBuf) { NULL, 0 };
+#endif
 
         if (alpha) {
             svt_config->min_qp_allowed = AVIF_CLAMP(encoder->minQuantizerAlpha, 0, 63);

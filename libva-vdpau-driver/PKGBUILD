pkgname=libva-vdpau-driver+clang
pkgver=0.7.4
pkgrel=5
pkgdesc='VDPAU backend for VA API'
arch=(x86_64)
url=https://freedesktop.org/wiki/Software/vaapi
license=(GPL)
provides=('libva-vdpau-driver' "libva-vdpau-driver=${pkgver}")
conflicts=('libva-vdpau-driver')
depends=(
  libgl
  libvdpau
  libx11
)
makedepends=(
  libva
  mesa
)
source=(
  "https://freedesktop.org/software/vaapi/releases/libva-vdpau-driver/libva-vdpau-driver-${pkgver}.tar.bz2"
  libva-vdpau-driver-0.7.4-glext-missing-definition.patch
  libva-vdpau-driver-0.7.4-libvdpau-0.8.patch
  libva-vdpau-driver-0.7.4-VAEncH264VUIBufferType.patch
  libva-vdpau-driver-0.7.4-CreateSurfaceFromV4L2Buf.patch
)
sha256sums=('155c1982f0ac3f5435ba20b221bcaa11be212c37db548cd1f2a030ffa17e9bb9'
            '776bfe4c101cdde396d8783029b288c6cd825d0cdbc782ca3d94a5f9ffb4558c'
            '5e567b026b97dc0e207b6c05410cc1b7b77a58ceb5046801d0ea1a321cba3b9d'
            '1ae32b8e5cca1717be4a63f09e8c6bd84a3e9b712b933816cdb32bb315dbda98'
            '1914ed49dfd25f9b884dceee15f7a2ad6bc77970d6866456cbda8b8670b75968')

_llvm=0

prepare() {

  if clang --version 2>/dev/null | grep -iq "clang\s*version\s*[0-9]" && ld.lld --version 2>/dev/null | grep -iq "LLD\s*[0-9]"; then
    _llvm=1
  fi

  cd "${srcdir:?}/libva-vdpau-driver-${pkgver}" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/libva-vdpau-driver-${pkgver} directory! Prepare Failed! \E[0m"
    exit 1
  )

  patch -Np1 -i ../libva-vdpau-driver-0.7.4-glext-missing-definition.patch
  patch -Np1 -i ../libva-vdpau-driver-0.7.4-libvdpau-0.8.patch
  patch -Np1 -i ../libva-vdpau-driver-0.7.4-VAEncH264VUIBufferType.patch
  patch -Np1 -i ../libva-vdpau-driver-0.7.4-CreateSurfaceFromV4L2Buf.patch

}

build() {

  cd "${srcdir:?}/libva-vdpau-driver-${pkgver}" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/libva-vdpau-driver-${pkgver} directory! Build Failed! \E[0m"
    exit 1
  )

  if [[ ${_llvm} -eq 1 ]]; then

    CFLAGS="${CFLAGS} -flto=thin"
    CXXFLAGS="${CXXFLAGS} -flto=thin"
    LDFLAGS="${LDFLAGS} -fuse-ld=lld"

  fi

  ./configure \
    --prefix=/usr

  make

}

package() {

  cd "${srcdir:?}/libva-vdpau-driver-${pkgver}" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/libva-vdpau-driver-${pkgver} directory! Package Failed! \E[0m"
    exit 1
  )

  make DESTDIR="${pkgdir:?}" install

}

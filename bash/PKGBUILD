pkgname=bash+clang
_basever=5.1
_patchlevel=012
pkgver=${_basever}.${_patchlevel}
pkgrel=1
pkgdesc='The GNU Bourne Again shell'
arch=(x86_64)
license=(GPL)
url='https://www.gnu.org/software/bash/bash.html'
backup=(etc/bash.bash{rc,_logout} etc/skel/.bash{rc,_profile,_logout})
depends=(readline libreadline.so glibc ncurses)
optdepends=('bash-completion: for tab completion')
provides=("bash" "bash=${pkgver}" 'sh')
conflicts=("bash")
source=(
  "https://ftp.gnu.org/gnu/bash/bash-${_basever}.tar.gz"{,.sig}
  dot.bashrc
  dot.bash_profile
  dot.bash_logout
  system.bashrc
  system.bash_logout
)
sha256sums=('cc012bc860406dcf42f64431bcd3d2fa7560c02915a601aba9cd597a39329baa'
  'SKIP'
  '3e22bf86ae6708df7a6bceb88c67a00118275f9c0b5268f453dd388af7c43b53'
  'e149407c2bee17779caec70a7edd3d0000d172e7e4347429b80cb4d55bcec9c2'
  '4330edf340394d0dae50afb04ac2a621f106fe67fb634ec81c4bfb98be2a1eb5'
  '5fdc20c44bc9058f728d11111327f4dbb5598fec4d948dd5265211598667f9f0'
  '025bccfb374a3edce0ff8154d990689f30976b78f7a932dc9a6fcef81821811e'
  'ebb07b3dbadd98598f078125d0ae0d699295978a5cdaef6282fe19adef45b5fa'
  'SKIP'
  '15ea6121a801e48e658ceee712ea9b88d4ded022046a6147550790caf04f5dbe'
  'SKIP'
  '22f2cc262f056b22966281babf4b0a2f84cb7dd2223422e5dcd013c3dcbab6b1'
  'SKIP'
  '9aaeb65664ef0d28c0067e47ba5652b518298b3b92d33327d84b98b28d873c86'
  'SKIP'
  'cccbb5e9e6763915d232d29c713007a62b06e65126e3dd2d1128a0dc5ef46da5'
  'SKIP'
  '75e17d937de862615c6375def40a7574462210dce88cf741f660e2cc29473d14'
  'SKIP'
  'acfcb8c7e9f73457c0fb12324afb613785e0c9cef3315c9bbab4be702f40393a'
  'SKIP'
  'f22cf3c51a28f084a25aef28950e8777489072628f972b12643b4534a17ed2d1'
  'SKIP'
  'e45cda953ab4b4b4bde6dc34d0d8ca40d1cc502046eb28070c9ebcd47e33c3ee'
  'SKIP'
  'a2c8d7b2704eeceff7b1503b7ad9500ea1cb6e9393faebdb3acd2afdd7aeae2a'
  'SKIP'
  '58191f164934200746f48459a05bca34d1aec1180b08ca2deeee3bb29622027b'
  'SKIP'
  '10f189c8367c4a15c7392e7bf70d0ff6953f78c9b312ed7622303a779273ab98'
  'SKIP')

validpgpkeys=('7C0135FB088AAF6C66C650B9BB5869F064EA74AB') # Chet Ramey

_llvm=0

if [[ $((10#${_patchlevel})) -gt 0 ]]; then
  for ((_p = 1; _p <= $((10#${_patchlevel})); _p++)); do
    source=(${source[@]} https://ftp.gnu.org/gnu/bash/bash-${_basever}-patches/bash${_basever//./}-$(printf "%03d" $_p){,.sig})
  done
fi

prepare() {

  if clang --version 2>/dev/null | grep -iq "clang\s*version\s*[0-9]" && ld.lld --version 2>/dev/null | grep -iq "LLD\s*[0-9]"; then
    _llvm=1
  fi

  cd "${srcdir:?}/bash-${_basever}" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/bash-${_basever} directory! Prepare Failed! \E[0m"
    exit 1
  )

  for ((_p = 1; _p <= $((10#${_patchlevel})); _p++)); do
    echo "applying patch bash${_basever//./}-$(printf "%03d" $_p)"
    patch -p0 -i ../bash${_basever//./}-$(printf "%03d" $_p)
  done

}

build() {

  cd "${srcdir:?}/bash-${_basever}" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/bash-${_basever} directory! Build Failed! \E[0m"
    exit 1
  )

  if [[ ${_llvm} -eq 1 ]]; then

    CFLAGS="${CFLAGS} -flto=thin"
    CXXFLAGS="${CXXFLAGS} -flto=thin"
    LDFLAGS="${LDFLAGS} -fuse-ld=lld"

  fi

  _bashconfig=(-DDEFAULT_PATH_VALUE=\'\"/usr/local/sbin:/usr/local/bin:/usr/bin\"\'
    -DSTANDARD_UTILS_PATH=\'\"/usr/bin\"\'
    -DSYS_BASHRC=\'\"/etc/bash.bashrc\"\'
    -DSYS_BASH_LOGOUT=\'\"/etc/bash.bash_logout\"\'
    -DNON_INTERACTIVE_LOGIN_SHELLS)

  CFLAGS="${CFLAGS} ${_bashconfig[@]}"

  ./configure \
    --prefix=/usr \
    --with-curses \
    --enable-readline \
    --without-bash-malloc \
    --with-installed-readline

  make

}

check() {

  make -C "bash-${_basever}" check

}

package() {

  make -C "bash-${_basever}" DESTDIR="${pkgdir:?}" install
  ln -s bash "${pkgdir:?}/usr/bin/sh"

  # system-wide configuration files
  install -Dm644 system.bashrc "${pkgdir:?}/etc/bash.bashrc"
  install -Dm644 system.bash_logout "${pkgdir:?}/etc/bash.bash_logout"

  # user configuration file skeletons
  install -dm755 "${pkgdir:?}/etc/skel/"
  install -m644 dot.bashrc "${pkgdir:?}/etc/skel/.bashrc"
  install -m644 dot.bash_profile "${pkgdir:?}/etc/skel/.bash_profile"
  install -m644 dot.bash_logout "${pkgdir:?}/etc/skel/.bash_logout"

}

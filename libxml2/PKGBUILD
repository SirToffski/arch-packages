pkgname=libxml2+clang
pkgver=2.9.14
pkgrel=1
pkgdesc='XML parsing library, version 2'
url='http://www.xmlsoft.org/'
arch=(x86_64)
license=(MIT)
provides=("libxml2" "libxml2=${pkgver}" libxml2.so)
conflicts=("libxml2")
depends=(zlib readline ncurses xz icu)
makedepends=(python git)
_commit=7846b0a677f8d3ce72486125fa281e92ac9970e8 # tags/v2.9.14^0

source=(
  "libxml2::git+https://gitlab.gnome.org/GNOME/libxml2.git#commit=${_commit}"
  "https://www.w3.org/XML/Test/xmlts20130923.tar.gz"
  libxml2-2.9.8-python3-unicode-errors.patch
  libxml2-disable-fuzz-tests.patch
)

sha256sums=('SKIP'
  '9b61db9f5dbffa545f4b8d78422167083a8568c59bd1129f94138f936cf6fc1f'
  'd331748e504e69603dac9c57f7b110a98a4bd4cb87e63d0c1bbcd71ec3635383'
  '163655aba312c237a234a82d64b71a65bd9d1d901e176d443e3e3ac64f3b1b32')

_llvm=0

pkgver() {

  cd "${srcdir:?}/libxml2" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/libxml2 directory! PkgVer Failed! \E[0m"
    exit 1
  )

  git describe --tags | sed 's/-rc/rc/;s/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'

}

_patch() {

  echo -e "\E[1;33m Apply patch: ${1}\E[0m"
  patch -p1 -i "${srcdir:?}/${1}"

}

prepare() {

  if clang --version 2>/dev/null | grep -iq "clang\s*version\s*[0-9]" && ld.lld --version 2>/dev/null | grep -iq "LLD\s*[0-9]"; then
    _llvm=1
  fi

  mkdir build

  # Use xmlconf from conformance test suite
  ln -s xmlconf build/xmlconf

  cd "${srcdir:?}/libxml2" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/libxml2 directory! Prepare Failed! \E[0m"
    exit 1
  )

  _patch libxml2-2.9.8-python3-unicode-errors.patch
  _patch libxml2-disable-fuzz-tests.patch

  NOCONFIGURE=1 ./autogen.sh

}

build() (

  cd "${srcdir:?}/build" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/build directory! Build Failed! \E[0m"
    exit 1
  )

  if [[ ${_llvm} -eq 1 ]]; then

    CFLAGS="${CFLAGS} -flto=thin"
    CXXFLAGS="${CXXFLAGS} -flto=thin"
    LDFLAGS="${LDFLAGS} -fuse-ld=lld"

  fi

  ../libxml2/configure \
    --prefix=/usr \
    --with-threads \
    --with-history \
    --with-python="/usr/bin/python" \
    --with-icu

  make

  find doc -type f -exec chmod 0644 {} +

)

check() {

  make -C build check

}

package() {

  make -C build DESTDIR="${pkgdir:?}" install
  make -C build/python DESTDIR="${pkgdir:?}" install
  install -Dm 644 build/COPYING -t "${pkgdir:?}/usr/share/licenses/${pkgname}"

  python -m compileall -d /usr/lib "${pkgdir:?}/usr/lib"
  python -O -m compileall -d /usr/lib "${pkgdir:?}/usr/lib"

}

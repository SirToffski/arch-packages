pkgname=telegram-desktop+clang
pkgver=2.8.4
pkgrel=3
pkgdesc='Official Telegram Desktop client'
arch=('x86_64')
url="https://desktop.telegram.org/"
license=('GPL3')
provides=('telegram-desktop' "telegram-desktop=${pkgver}")
conflicts=('telegram-desktop')
depends=('hunspell' 'ffmpeg' 'hicolor-icon-theme' 'lz4' 'minizip' 'openal' 'ttf-opensans'
  'qt5-imageformats' 'xxhash' 'libdbusmenu-qt5' 'kwayland' 'gtk3' 'glibmm'
  'webkit2gtk' 'rnnoise' 'pipewire' 'libxtst' 'libxrandr')
makedepends=('cmake' 'git' 'ninja' 'python' 'range-v3' 'tl-expected' 'microsoft-gsl'
  'libtg_owt' 'extra-cmake-modules')
source=(
  "https://github.com/telegramdesktop/tdesktop/releases/download/v${pkgver}/tdesktop-${pkgver}-full.tar.gz"
  "fix-gcc11-assert.patch"
  "mallocng.patch"
  "fix-freeze-after-file-dialog.patch::https://github.com/telegramdesktop/tdesktop/commit/1261c775d4ca6fb78277ec213794da7c15e304e2.patch"
  "revert-qmenubar-fix-global-menu.patch::https://github.com/telegramdesktop/tdesktop/commit/6f031a715e5f9db1f75ec230cf06538d77d5b4ec.patch"
)
sha512sums=('b0e78aa9bffa1707425f058737b0d0a0db26e8fba14e1413e465eefcbbc95dc0eaee642d1ebc4a82c8239188a3eed677c5c3eb748203348a14ba2ace61afd779'
            'd94c21f45a14eea009f4dc099a0be7774aa9c64d6bdb2745eb866a505ad4d95e4e75e53e110bcdc2db553809d8aea485e3fa321feccc7660120c0f418f4d5e3f'
            'd640bdef30d24b2a28eb69e210e7acf557c125ef6754897b4ff2c425fa57c3067d53f2e968f15cefb08caeaf9e9d6afc41ca5e4a18a10cf3f18321bdeabb6270'
            '2a5c8f5ca5a3a34872567ac98032717c40689baab2926d9fa8960404c6630925732f028dc7fdcf28bef11dd247a78779c3f5ca631f8b75abf23e23dab8d0f24c'
            '9a49f7e074f8e5c2ecad0092146af2647f7afd5e7b7904d3634013fcba7fb81eaff7ccca35c955ee55010431172b2c1bcdbe7f01d3d5a391d950b278b491fb54')

_llvm=0

prepare() {

  if clang --version 2>/dev/null | grep -iq "clang\s*version\s*[0-9]" && ld.lld --version 2>/dev/null | grep -iq "LLD\s*[0-9]"; then
    _llvm=1
  fi

  cd "${srcdir:?}/tdesktop-${pkgver}-full" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/tdesktop-${pkgver}-full/cmake directory! Build Failed! \E[0m"
    exit 1
  )

  # force webrtc link to libjpeg and X11 libs
  echo "target_link_libraries(external_webrtc INTERFACE jpeg)" | tee -a cmake/external/webrtc/CMakeLists.txt
  echo "find_package(X11 REQUIRED COMPONENTS Xcomposite Xdamage Xext Xfixes Xrender Xrandr Xtst)" | tee -a cmake/external/webrtc/CMakeLists.txt
  echo "target_link_libraries(external_webrtc INTERFACE Xcomposite Xdamage Xext Xfixes Xrandr Xrender Xtst)" | tee -a cmake/external/webrtc/CMakeLists.txt

  patch -Np1 -i "${srcdir:?}/mallocng.patch"
  patch -Np1 -i "${srcdir:?}/fix-freeze-after-file-dialog.patch"
  patch -Np1 -i "${srcdir:?}/revert-qmenubar-fix-global-menu.patch"
  patch -d Telegram/lib_webview/ -Np1 -i "${srcdir:?}/fix-gcc11-assert.patch"

}

build() {

  if [[ ${_llvm} -eq 1 ]]; then

    CFLAGS="${CFLAGS} -flto=thin"
    CXXFLAGS="${CXXFLAGS} -flto=thin"

  fi

  cmake -B build -S tdesktop-${pkgver}-full \
    -G Ninja \
    -DCMAKE_INSTALL_PREFIX="/usr" \
    -DCMAKE_BUILD_TYPE=Release \
    -DTDESKTOP_API_ID=611335 \
    -DTDESKTOP_API_HASH=d524b414d21f4d37f08684c1df41ac9c \
    -DTDESKTOP_LAUNCHER_BASENAME="telegramdesktop" \
    -DDESKTOP_APP_SPECIAL_TARGET=""

  ninja ${NINJAFLAGS} -C build

}

package() {

  DESTDIR="${pkgdir:?}" ninja ${NINJAFLAGS} -C build install

}

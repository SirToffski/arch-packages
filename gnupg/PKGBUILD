pkgname=gnupg+clang
pkgver=2.2.29
pkgrel=1
pkgdesc='Complete and free implementation of the OpenPGP standard'
url='https://www.gnupg.org/'
license=('GPL')
arch=('x86_64')
provides=('gnupg' "gnupg=${pkgver}")
conflicts=('gnupg')
checkdepends=('openssh')
makedepends=('libldap' 'libusb-compat' 'pcsclite')
depends=('npth' 'libgpg-error' 'libgcrypt' 'libksba' 'libassuan' 'pinentry'
  'bzip2' 'libbz2.so' 'readline' 'libreadline.so' 'gnutls' 'sqlite'
  'zlib' 'glibc')
optdepends=('libldap: gpg2keys_ldap'
  'libusb-compat: scdaemon'
  'pcsclite: scdaemon')
validpgpkeys=(
  'D8692123C4065DEA5E0F3AB5249B39D24F25E3B6' # Werner Koch (dist sig)
  '031EC2536E580D8EA286A9F22071B08A33BD3F06' # NIIBE Yutaka (GnuPG Release Key) <gniibe@fsij.org>
  '5B80C5754298F0CB55D8ED6ABCEF7E294B092E28' # Andre Heinecke (Release Signing Key)
  '6DAA6E64A76D2840571B4902528897B826403ADA' # Werner Koch (dist signing 2020)
)
source=(
  "https://gnupg.org/ftp/gcrypt/gnupg/gnupg-${pkgver}.tar.bz2"{,.sig}
  'drop-import-clean.patch'
  'avoid-beta-warning.patch'
)
sha256sums=('39d07cdb4524818f9ebce49294931974af504519e6a7476c52e9d38fc0bd0cc9'
  'SKIP'
  '02d375f0045f56f7dd82bacdb5ce559afd52ded8b75f6b2673c39ec666e81abc'
  '22fdf9490fad477f225e731c417867d9e7571ac654944e8be63a1fbaccd5c62d')

install=install

_llvm=0

prepare() {

  if clang --version 2>/dev/null | grep -iq "clang\s*version\s*[0-9]" && ld.lld --version 2>/dev/null | grep -iq "LLD\s*[0-9]"; then
    _llvm=0
  fi

  cd "${srcdir:?}/gnupg-${pkgver}" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/gnupg-${pkgver} directory! Prepare Failed! \E[0m"
    exit 1
  )

  patch -p1 -i ../avoid-beta-warning.patch
  patch -p1 -i ../drop-import-clean.patch

  # improve reproducibility
  rm doc/gnupg.info*

  ./autogen.sh

}

build() {

  cd "${srcdir:?}/gnupg-${pkgver}" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/gnupg-${pkgver} directory! Build Failed! \E[0m"
    exit 1
  )

  if [[ ${_llvm} -eq 1 ]]; then

    CFLAGS="${CFLAGS} -flto=thin"
    CXXFLAGS="${CXXFLAGS} -flto=thin"

  fi

  ./configure \
    --prefix=/usr \
    --sysconfdir=/etc \
    --sbindir=/usr/bin \
    --libexecdir=/usr/lib/gnupg \
    --enable-maintainer-mode

  make

}

check() {

  cd "${srcdir:?}/gnupg-${pkgver}" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/gnupg-${pkgver} directory! Check Failed! \E[0m"
    exit 1
  )

  make check

}

package() {

  cd "${srcdir:?}/gnupg-${pkgver}" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/gnupg-${pkgver} directory! Package Failed! \E[0m"
    exit 1
  )

  make DESTDIR="${pkgdir:?}" install
  ln -s gpg "${pkgdir:?}/usr/bin/gpg2"
  ln -s gpgv "${pkgdir:?}/usr/bin/gpgv2"

  install -Dm 644 "doc/examples/systemd-user/"*.* -t "${pkgdir}/usr/lib/systemd/user"

}
